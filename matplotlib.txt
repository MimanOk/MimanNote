# 安装：pip3 install matplotlib

# 简介
    - Matplotlib是一个强大的Python绘图和数据可视化工具包

# 使用
    import matplotlib.pyplotas plt
    
    - 导入图片
        - 要支持jpg需先安装pillow模块：pip3 install pillow
        cat = plt.imread("./cat.jpg")
        plt.imshow(cat)
        cat是一个三维数组，是彩色图片的像素点坐标加RGB信息
    
    - 手动绘图
        plt.plot([1,2,3,4,5],[1,3,1,4,5],"o-.b",label="Line A")
        plt.plot([1,3,5,6],[2,8,6,9],"^-.k",label="Line B")
        plt.title("Miman")
        plt.xlabel("X轴")
        plt.ylabel("Y轴")
        plt.xlim([0,10])
        plt.ylim([0,10])
        plt.xticks(np.arange(0,11,2),['a','b','c','d','e','f'])  # 重新分配x轴各刻度名称
        plt.yticks(np.arange(0,11,2))
        plt.show()
    
    - plot函数：绘制折线图
        线型linestyle(-,-.,--,:)
        点型marker(v,^,s,*,H,+,x,D,o)
        颜色color(b,g,r,y,k,w)  # 可以blue red这样写
        
        可以直接这样写"o-.b"
        
    - 图像标注
        plt.title()  # 设置图像标题
        plt.xlabel()  # 设置x轴名称
        plt.ylabel()  # 设置y轴名称
        plt.xlim()  # 设置x轴范围
        plt.ylim()  # 设置y轴范围
        plt.xticks()  # 设置x轴刻度
        plt.yticks()  # 设置y轴刻度
        plt.legend()  # 设置曲线图例
        
    - 画图 y=x,y=x^2,y=3x^3+2x^2+x+1
        - y=x
            x = np.linspace(-100,101,1000)
            y = x
            plt.plot(x,y,"o-r",label="y=x")
            
        - y=x^2
            y = x**2
            plt.plot(x,y,"^-y",label="y=x^2")
            
        - y=3x^3+2x^2+x+1
            y = 3*x**3+2*2**2+x+1
            plt.plot(x,y,"x-b",label="y=3x^3+2x^2+x+1")
           
        plt.legend()
        plt.show()
        
    - 画布与子图
        - 画布：figure
            fig = plt.figure()
        - 图：subplot
            ax1 = fig.add_subplot(2,2,1)
        - 调节子图间距
            subplots_adjust(left,bottom,right,top,wspace,hspace)
            
        - 例
            fig = plt.figure()
            ax1 = fig.add_subplot(2,2,1)
            ax1.plot(np.arange(1,11),np.arange(1,11),"^-b",label="y=x")
            ax2 = fig.add_subplot(2,2,2)
            ax2.plot(np.arange(1,11),np.arange(1,11)**2,"o-r",label="y=x^2")
            fig.legend()
            fig.show()
            
    - 支持的图类型
        plt.plot(x,y,fmt,...)  # 坐标图
        plt.boxplot(data,notch,position)  # 箱型图
        plt.bar(left,height,width,botom)  # 条形图
        plt.barh(width,bottom,left,height)  # 横向条形图
        plt.polar(theta,r)  # 极坐标图
        plt.pie(data,explode)  # 饼图
        plt.psd(x,NFFT=256,pad_to,Fs)  # 功率谱密度图
        plt.specgram(x,NFFT=256,pad_to,F)  # 谱图
        plt.cohere(x,y,NFFT=256,Fs)  # X-Y相关性函数
        plt.scatter(x,y)  # 散点图
        plt.step(x,y,where)  # 步阶图
        plt.hist(x,bins,normed)  # 直方图
        
        - 条形图
            data = [10,20,30,50,40]
            labels = ["Jan","Feb","Mar","Apr","May"]
            plt.bar(np.arange(len(data)),data)
            plt.xticks(np.arange(len(data)),labels)
            plt.show()
            
        - 饼状图
            plt.pie(data,labels=labels,autopct="%.2f%%",explode=[0,0,0.1,0,0.1])
            plt.show()
            
        - K线图
            import matplotlib.finance as fina
            from matplotlib.dates import date2num
            
            df = pd.read_csv("file_path",parse_dates=['date'],index_col=['date'])[['open','close','high','low']]
            df['time'] = date2num[df.index.to_pydatetime()]
            fig = plt.figure()
            ax = fig.addplot(1,1,1)
            arr = df[["time","open","close","high","low"]].values
            fin.candlestick_ochl(ax,arr)  # candlestick_ochl的ochl是open、close、high、low的首字母，位置可调换ohcl、cohl...
            
            
        























    